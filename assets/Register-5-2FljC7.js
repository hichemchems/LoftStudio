import{r as e,u as s,a,j as r,L as m}from"./index-ByAoKMyo.js";import{u as l}from"./index.esm-D1F7Yd0O.js";const n=()=>{const{register:n,handleSubmit:o,formState:{errors:i},watch:t}=l(),[d,c]=e.useState(""),[u,h]=e.useState(!1),{register:p}=s(),x=a(),g=t("password");return r.jsx("div",{className:"auth-container",children:r.jsxs("div",{className:"auth-card",children:[r.jsx("h2",{children:"Register for Loft Barber"}),r.jsxs("form",{onSubmit:o(async e=>{h(!0),c("");const s=await p({username:e.username,email:e.email,password:e.password,name:e.name,role:e.role||"user"});h(!1),s.success?x("/dashboard"):c(s.error)}),className:"auth-form",children:[r.jsxs("div",{className:"form-group",children:[r.jsx("label",{htmlFor:"username",children:"Username"}),r.jsx("input",{type:"text",id:"username",autoComplete:"username",...n("username",{required:"Username is required",minLength:{value:3,message:"Username must be at least 3 characters"},maxLength:{value:50,message:"Username must be less than 50 characters"},pattern:{value:/^[a-zA-Z0-9_]+$/,message:"Username can only contain letters, numbers, and underscores"}}),className:i.username?"error":""}),i.username&&r.jsx("span",{className:"error-message",children:i.username.message})]}),r.jsxs("div",{className:"form-group",children:[r.jsx("label",{htmlFor:"email",children:"Email"}),r.jsx("input",{type:"email",id:"email",autoComplete:"email",...n("email",{required:"Email is required",pattern:{value:/^\S+@\S+$/i,message:"Invalid email address"}}),className:i.email?"error":""}),i.email&&r.jsx("span",{className:"error-message",children:i.email.message})]}),r.jsxs("div",{className:"form-group",children:[r.jsx("label",{htmlFor:"name",children:"Full Name"}),r.jsx("input",{type:"text",id:"name",autoComplete:"name",...n("name",{required:"Full name is required",minLength:{value:2,message:"Name must be at least 2 characters"},maxLength:{value:100,message:"Name must be less than 100 characters"}}),className:i.name?"error":""}),i.name&&r.jsx("span",{className:"error-message",children:i.name.message})]}),r.jsxs("div",{className:"form-group",children:[r.jsx("label",{htmlFor:"password",children:"Password"}),r.jsx("input",{type:"password",id:"password",autoComplete:"new-password",...n("password",{required:"Password is required",minLength:{value:14,message:"Password must be at least 14 characters"},pattern:{value:/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]/,message:"Password must contain uppercase, lowercase, number, and special character"}}),className:i.password?"error":""}),i.password&&r.jsx("span",{className:"error-message",children:i.password.message})]}),r.jsxs("div",{className:"form-group",children:[r.jsx("label",{htmlFor:"confirmPassword",children:"Confirm Password"}),r.jsx("input",{type:"password",id:"confirmPassword",autoComplete:"new-password",...n("confirmPassword",{required:"Please confirm your password",validate:e=>e===g||"Passwords do not match"}),className:i.confirmPassword?"error":""}),i.confirmPassword&&r.jsx("span",{className:"error-message",children:i.confirmPassword.message})]}),r.jsxs("div",{className:"form-group",children:[r.jsx("label",{htmlFor:"role",children:"Role"}),r.jsxs("select",{id:"role",...n("role"),defaultValue:"user",children:[r.jsx("option",{value:"user",children:"User"}),r.jsx("option",{value:"admin",children:"Admin"})]})]}),d&&r.jsx("div",{className:"error-message",children:d}),r.jsx("button",{type:"submit",disabled:u,className:"auth-button",children:u?"Registering...":"Register"})]}),r.jsxs("p",{className:"auth-link",children:["Already have an account? ",r.jsx(m,{to:"/login",children:"Login here"})]})]})})};export{n as default};
